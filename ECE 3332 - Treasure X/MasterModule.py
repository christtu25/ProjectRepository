import time
from readGPS import get_gps_position, power_on, power_down
from centerplot import calculate_center
from BLEScanner import scan_for_beacons

# Assuming power_key is defined in readGPS.py
power_key = 6

def main():
    try:
        # Step 1: Start the GPS module
        power_on(power_key)
       
        # List to store GPS coordinates of the beacons
        gps_coordinates = []
       
        # Step 2: Scan for Bluetooth devices and store their GPS locations
        beacons_found = 0
        while beacons_found < 2:  # Adjust this to the number of beacons you expect
            found_beacon = scan_for_beacons()
            if found_beacon:
                # Step 3: Get and store current GPS location
                gps_data = get_gps_position()
                if gps_data:
                    gps_coordinates.append(gps_data)
                    print(f"GPS location {len(gps_coordinates)}: {gps_data}")
                    beacons_found += 1
           
        # Step 4: Calculate the center of the GPS locations and output the HTML file
        if len(gps_coordinates) == 2:  # Adjust this to the number of beacons you expect
            center_location = calculate_center(gps_coordinates)
            print(f"Center location (treasure): {center_location}")
            print("Output HTML file generated by centerplot.")
        else:
            print("Error: Not all beacons found")

    except Exception as e:
        print(f"An error occurred: {e}")
    finally:
        # Power down the GPS module
        power_down(power_key)
       
if __name__ == "__main__":
    main()
